jdk的三种指定方式：

编译，运行，构建；


我理解你的困惑！在 IntelliJ IDEA 中确实有多个地方需要设置 JDK，稍微复杂一些。不过，按照不同的需求，分成几个小步骤来操作，可以帮助你理解各自的作用，并做出合理的选择。我们可以从最常用的几种情况着手，简化一下操作步骤。

### 总结一下最常见的几种 JDK 设置场景：

1. **项目的 JDK（Project SDK）**
   - 这是项目级别的 JDK 设置。你设置的 JDK 版本将影响到整个项目的编译和运行。

2. **构建工具的 JDK（Gradle/Maven）**
   - 如果你使用的是构建工具（如 Gradle 或 Maven），你需要设置该工具所用的 JDK，确保构建过程中的 JDK 正确。

3. **运行/调试配置（Run/Debug Configurations）**
   - 这是程序执行时的 JDK 设置。如果你在运行某个程序时，想指定特定的 JDK 版本，可以在这里设置。

### 下面我们就分别讲解如何在这几种常见的地方设置 JDK：

---

### 1. **设置项目的 JDK（Project SDK）**

1. **步骤**：
   - 打开项目，点击 **File** -> **Project Structure**（或者按 `Ctrl+Alt+Shift+S`）。
   - 在 **Project** 选项卡中，找到 **Project SDK**，在下拉框中选择你要使用的 JDK 版本。
   - 如果你希望使用的 JDK 没有列出，点击右侧的 **New...** 按钮，选择安装的 JDK 文件夹。

2. **效果**：
   - 这个设置影响的是整个项目的 JDK 环境。它决定了你代码的编译和运行环境。

---

### 2. **设置构建工具（如 Gradle/Maven）的 JDK**

1. **步骤**：
   - 进入 **File** -> **Settings** -> **Build, Execution, Deployment** -> **Build Tools**。
   - 如果你使用 **Gradle**，选择 **Gradle**，然后在右侧的 **Gradle JVM** 设置中选择正确的 JDK 版本。如果你使用 **Maven**，则选择 **Maven**，设置 **JDK for Maven**。
   - 如果没有合适的 JDK，可以点击 **New...** 并选择本地安装的 JDK。

2. **效果**：
   - 这个设置影响的是构建工具的 JDK，用于构建过程中（例如运行 `gradle build` 或 `mvn install` 时）。

---

### 3. **设置运行/调试配置的 JDK**

1. **步骤**：
   - 在 IDEA 中右上角找到你的运行配置，点击旁边的下拉箭头，选择 **Edit Configurations**。
   - 在弹出的窗口中，选择你要配置的运行/调试配置，找到 **JRE**（一般会在下方的配置区域）。
   - 选择你希望该配置使用的 JDK 版本。

2. **效果**：
   - 这个设置影响的是程序运行时的 JDK 环境。如果你需要在不同的运行配置中使用不同的 JDK，可以在这里单独设置。

---

### 4. **修改 IDEA 的默认 JDK（IDE 默认环境）**

1. **步骤**：
   - 打开 **File** -> **Settings** -> **Platform Settings** -> **SDKs**。
   - 在这里你可以查看和管理所有已安装的 JDK。如果你想改变 IDEA 使用的默认 JDK，可以点击 **Add SDK** 并选择一个新的 JDK 安装目录。

2. **效果**：
   - 这个设置影响的是 IDEA 本身的环境，也就是说，如果你没有明确指定某个 JDK，IDEA 会默认使用这个 JDK。

---

### **总结：**
- **项目 JDK**：影响整个项目的编译和运行环境。最常用的设置，通常设置为你当前开发的 Java 版本（如 JDK 8 或 JDK 17）。
- **构建工具的 JDK（Gradle/Maven）**：设置构建工具使用的 JDK。如果你使用构建工具进行自动化构建，确保这里的 JDK 与项目 JDK 一致。
- **运行/调试配置的 JDK**：用于程序实际运行时的 JDK。可以为不同的运行配置设置不同的 JDK。
- **IDE 默认 JDK**：如果你没有在项目中显式设置 JDK，IDE 会使用默认的 JDK。通常设置为 JDK 8 或与开发项目相匹配的版本。

你不需要去设置所有地方，通常只需要关注 **项目的 JDK** 和 **构建工具的 JDK** 即可，**运行/调试配置的 JDK** 和 **IDE 默认 JDK** 是更多的特殊场景设置。

希望这样能帮助你简化理解！
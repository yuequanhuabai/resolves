jvm

类的生命周期： 类的加载--> 连接 --> 初始化 --> 使用 --> 卸载

主内存(线程可见)，工作内存；

volatile：1.变量修改，各个线程可见性；
              2.禁止指令优化，防止“指令重排序”；

volatile 不能保证原子性和线程安全；

原子性：      CAS算法；

volatile 是通过 “内存屏障” 防止指令重排序的
1. 在volatile写操作前，插入StoreStore屏障
2. 在volatile写操作后，插入StoreLoad屏障
3. 在volatile读操作后，插入LoadLoad屏障
4. 在volatile读操作后，插入LoadStore屏障
jvm

五个部分，两大块；

线程私有 、 线程共享；

线程私有：
虚 机栈（VM stack）：方法调用存储  (调用本地自己写的方法)
本地方法栈：调用操作系统底层的方法  (native方法)
程序计数器：

堆是jvm区域中最大的一块，再jvm启动时创建完毕；
新生代：老生代    1：2

eden                       8
s0  from survivor     1
s1  to  survivor         1


jvm  P17





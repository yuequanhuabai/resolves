项目名：招商银行E餐通
相关技术：Spring Cloud Alibaba、MyBatis、MySQL、Redis、RocketMQ、Nginx、ElasticSearch、DDD
项目描述：E-餐通是一个支持线上、线下订餐的用餐服务平台，支持支付宝、微信、员工卡、现金等多种渠道支付.
合作企业已经超过3600家，注册用户已超过500万。
目前同时在线用户最高300多万，高峰期 qps可达4000。该项目已稳定上线，在招商银行APP或微信小程序搜索智慧食堂即可找到。
责任描述：
1、参与架构改造以及部分数据的迁移，将原来基于 MVC 模型的三层架构改造成基于 DDD 领域驱动设计思想的四成架构，参与
测试环境和灰度环境的数据迁移。
2、负责自定义角色权限模块，基于RBAC模型实现角色权限的动态配置，并且支持自定义二级角色和菜单。
3、负责订单中心服务的代码和SQL优化，例如：原线下订单报表导出超过5万条数据需要40s左右(经常超时)，优化后导出5万条数
据缩减到5s左右，最高支持导出50万条数据，并且导出时间在50s以内。
4、负责线下订单模块的架构改造，封装ES工具，并使用 ES改造线下订单模块，优化订单大数据量查询导出性能。
5、参与Redis的缓存热点探测改造，提高系统的稳定性。
6、负责用户中心服务部分模块的代码质量检测及改造，根据招行的标准通过check style进行代码扫描检测并改造。
7、参与业务的迭代开发，如基础配置模块、设备管理模块、用户反馈短信及机器人消息通知等


项目名称：华为商城
项目介绍：华为商城，华为大型的分布式电商系统，面向全球10亿以上的用户，全球多站点部署。系统模块
包括：前台商品中心，订单中心，用户中心，库存中心，商品库存中心，财务中心，调度中心，仓储中心，
营销活动中心等
涉及技术：SrpingCloud 相关、Redis、MySQL、Kafka 丶 K8S、MyBatis、Nacos、ES 等；
项目职责：在罗盘系统从 0 到成为公司 bg 级产品开始商业化过程中，负责相关核心功能的分析，设计及代
码编写，对系统进行统筹规划&设计，使开发周期快于预期系统稳定性强易于扩展维护，上线缺陷较少
主要贡献：
 担任小组的核心开发，负责前台用户商品中心，促销营销中心，订单中心模块架构的方案设计，
同时组织小组代码QC。
 对系统进行优化，梳理原有电商核心链路，解耦营销功能，设计了营销中台系统，提高营销模块QPS提
升2万以上
 参与技术难题的公关，预研新技术缓存热点探测系统，目前已经成功上线运行，在秒杀、促销活动高并
发的场景下，降低击穿的风险，同时提高了系统的稳定。
 调研和落地分布式事务解决方案，处理微服务数据一致性问题
 负责实现多泳道环境，在国际化业务中降低 80% 机器成本
 负责项目的上线，线上问题排查，全球站点机器性能指标的分析
 项目收获：会从业务本身出发去思考到需求落地的设计整个过程，分析问题时究其本质，能够快速的拆分
理解需求，会结合经验去分析思考其合理性，对功能设计会更多的考虑到其扩展维护性，以应对需求变动对
核心业务代码逻辑的影响，并会考虑其整体框架设计与规划的合理性，保证跟需求的业务规划能保持一致。


荣耀轻量化平台
Java 开发工程师
技术栈: SpringCloud、Mybaits、Docker、MySql、RocketMQ、Redis、MongoDB
项目描述:
荣耀轻量化平台主要开展 2B\2C 业务，包含了 P 端的 SOM 与 OMS，和移动端的 hi 荣耀小程序、
荣耀+APP 两个系统，其中的 SOM 和 OMS 是提供给荣耀的线下门店使用的系统，提供了采购、交易、商
品、库存等服务，hi 荣耀小程序则是面对 2C 用户提供荣耀会员业务、购物下单、线上预定线下取货、荣耀
课堂等服务。
责任描述：

开发 OMO 管理模块，负责平台中线上线下融合业务的管理和协调工作，包括线上线下订单对接、库存对、
会员体系打通等

开发礼品管理模块，负责平台中礼品资源的维护和管理，包括礼品入库、礼品兑换、礼品发放记录等。该
模块与营销管理模块相互配合

营销管理模块：负责平台中营销活动的策划和实施，包括优惠券发放、积分兑换、会员特权设置等

商户管理模块：负责平台中商户信息的维护和管理，包括商户入驻、商户资质审核、商户经营状态监控等
技术要点：

实现多泳道环境，在国际化业务中降低 80% 机器成本
使用分布式事务，保证多个微服务数据一致性
使用 redis 缓存技术缓解数据库压力。
使用redis在高并发场景下扣减优惠券
使用MQ做大流量削峰填谷


welab信贷平台
Java 开发工程师
技术栈: springboot、springcloud、mybatis、mysql、kafka、redis、 elasticSearch、tcc-transaction
项目描述:
我来数科前身为我来贷，是亚洲领先的纯线上金融科技平台，以大数据、人工智能等技术为工薪族、小微企业主等高增长潜力人群提供消费信贷及经营贷款等金融服务！
责任描述：
- 搭建精准运营平台，基于用户状态和行为数据做消息推送、触达消息、优惠券发送、运营位等运营业务，提高用户活跃度
- 搭建优惠券和活动系统，包括优惠券配置管理，领券，用券，以及运营活动等功能，拉新用户和提高用户留存率
- 参与进件服务/还款服务/金融产品服务/资金分流服务 等业务开发，主要提供贷款还款服务

技术要点：
- 使用kafka connector监听mysql/postgresql数据变更，把5千万用户相关数据同步数据到es并建立宽表，提供灵活筛选条件
- 基于redis解决运营活动高并发问题
- 使用tcc分布式事务解决微服务数据一致性问题


项目名称：聚合支付中台
项目介绍：构建微服务聚合支付平台，整合第三方支付接口（支付宝、银联支付、微信支付
等），封装成接口提供给服务接口给其他中台使用。
责任描述：
1.与第三方支付接口平台技术人员对接
2.聚合支付平台数据库表结构设计
3.基于设计模式构建聚合支付平台
4.基于 MQ 实现分布式事务解决方案
5.使用 xxl-job 分片实现聚合支付对账
6.常用遇到支付难题问题解决
与第三方支付接口平台技术人员对接
负责支付宝、微信支付、银联支付等支付接口技术人员沟通对接
聚合支付平台数据库表结构设计
负责聚合支付平台数据库表结构设计，payment_channel 渠道表、payment_transaction_log 日志表等实现完全可视化界面支付开关控制支付渠道。基于设
计模式构建聚合支付平台
使用策略+工厂设计模式实现支付接口提交 html 表单元素重构、使用模版方法+工厂设计模
式实现共同异步回调代码重构，采用多线程+MQ 实现支付回调日志收集
使用 xxl-job 实现聚合支付对账
使用分布式任务调度平台 XXL-JOB 实现支付接口产生延迟导致订单状态不同步实现自动化
补偿，每天晚上两点钟时间定时触发任务，商户端主动使用支付 id 调用第三方支付渠道接
口查询支付状态是否已经支付过，如果第三方支付渠道接口已经支付过，同步商户端订单状
态。
基于 MQ 实现分布式事务解决方案
在微服务系统中，支付服务调用积分服务接口增加对应积分，该场景存在分布式事务问题，
采用 RocketMQ 保证最终一致性实现双方数据同步


会员日优惠券秒杀\抢购项目
开发负责儿
2024.08 - 2024.12
业绩：
提升预售房券购买后使用率从21.55%至24.19%(下单后21天内)
参与该活动的低入住率目标门店平均RevPAR由78.31%提升至85.07%(券有效周期3个月内)
内容：
项目描述：
本项目旨在为终端消费者提供一个高效、互动性强的会员日优惠券秒杀/抢购平台(华住会APP)，该系统将集成实 时数据处理、用户行为分析和个性化推荐引擎，以提升用户黏性和平台影响力
项目架构： • SpringBoot + Hive大数据存储 + MySql本地存储 + Redis缓存 + 乐观锁 + kafka、bus消息队列 + Docker\K8s容器 化部署及扩容
技术描述：
• 参与漏斗形QPS评估(3200)、TPS评估(4166)
• 抓取用户刷新页面操作，提前将数据存储到Redis预热，同时将关键数据及RT较长的接口返回缓存到Redis中；
• 前置消息队列限流至用户请求阶段，加快处理速率，释放资源引入异步机制：活动是否有效；
接入风控系统完 善黑名单机制，拦截异常请求和账户；


深农商行银行聚合支付
所有技术：Spring Boot + Spring Cloud Alibaba+ Mybatis Plus + 6台Redis，3主3从集群 + ES集
群 + RocketMQ+ mysql主从（8.0）+数仓团队（HDFS）
项目介绍：项目分为C端和B端：B端主要包括运营后台、服务商后台；C端主要包括盈收收展业版
APP【为销售展业人员提供便利】、盈收收商户版APP。主要功能包括：服务商进件、商户进件、
商户微信实名认证、用户交易，包含权限管理、商户管理、服务商管理、码牌管理、交易管理、门
店管理等模块。
工作内容：
对接三方支付【支付宝、微信、银联】，对接三方支付渠道【银盛、联动、杉德】。
系统商户入驻并进件至三方。
商户进件完成之后的微信实名认证功能。
商户进件完成及完成微信认证操作之后的支付功能。商户在三方的信息修改及费率变更功能。
权限管理模块、商户管理/服务商管理部分模块的开发、APP 端开发。
利用泛型、反射及自定义注解技术对业务层代码进行优化、对主流程代码进行优化。对项目进
行代码重构优化、对模块功能进行单元测试。
协助前端获取三方支付所需授权码信息完成支付。对项目进行多通道整合【银盛、联动、杉
德…】 App 端版本管理。

业务背景：进件商户数量太大，进件所需数据较多，需要全部报送三方。系统有段时间支持多
通道同时进件。
难点：商户数据量大，进件通道多。各个通道接口调用时长不一致。导致响应过慢。
解决：引入 kafka，丢消息出去。上游服务发送进件消息，下游只需要接收消息，异步去处
理。接口响应快。
使用 AOP 进行全局日志记录。
业务背景：系统上线初期，系统接口调用情况未知。排查问题比较难。
解决方案：采用 AOP 编程，环绕通知，记录接口请求，响应及异常信息至 mysql 中。方便排
查问题。使用桥接模式、工厂模式、策略模式对工程进行解耦。
使用适配器模式帮助完成代码重构。
使用 XXL-JOB 分布式任务调度处理超时订单状态。
采用 POI 组件实现日交易数据、月交易量的动态导出。
使用 jenkins 进行项目的部署与发布。
将商户信息数据维护至缓存中。使用 Ehcache 进行一级缓存、Redis 进行二级缓存以此减小
数据库端的压力。
业务背景:商户录入数据较多，商户详情页展示每次都需要查询 Mysql，数据库压力过大。
解决方案：引入 redis 缓存。采用商户信息缓存维度化。每次查询商户信息，先查缓存，减少
数据库压力。更新商户信息，采用“cache aside pattern”模式更新缓存数据和数据库数据。


宁巢公寓
软件架构: SpringCloud+ Gateway + Nacos + Feign+ Redis + RocketMQ + Seata
该小程序为某连锁品牌公寓所开发的小程序小程序包括该品牌所有项目既不同区房源的户型展示,价格
及地理位置信息等,用户也可以通过想住哪功能搜索该品牌所有区房源的信息根据关键字搜索适合自己的公寓并
对该房源信息进行收藏。除此之外该小程序也为用户提供预约看房,抢先预定等功能模块,也为租户提供对自己
已租房源的管理,包括账单管理模块,报修管理模块,换房申请管理等模块。
负责模块 :
租房功能：可根据定位知道当前位置与公司的距离，考虑到成本、效率及风险协议外接法大大签订合同协议
退房功能：根据退房时间判断是否需要支付违约金。
转租功能：提供交流朋友圈供客户转租自己的房间。
动态功能：用户可以发布动态、图片视频等，分享生活，实现数据的互动，如点赞、评论、 喜欢等
用户发放优惠券：新用户注册、老用户回归签到可领优惠券。
每日签到功能：每日持续签到用户，自动发放优惠券；涉及使用定时器检测用户的持续签到状态。
报表统计：对终端传输的数据做报表分析统计。
广告功能：使用 Redis 缓存商品信息和广告
短信登陆功能


项目名称：优享家政平台
项目描述：
基于 Spring Cloud Alibaba 的家政服务 o2o 项目，项目包括四个端：用户端(小程序)、服务端（app）、机构端(PC)、运营管理端(PC)，用
户通过平台在线下单、支付，家政服务人员通过平台抢单，平台也会自动派单给服务人员，服务人员接到订单根据预约时间去现场服务，服
务完成后用户进行在线评价，以及售后、退款等业务。
项目架构：Springboot+SpringCloud+Mybatis-Plus+Redis+RocketMQ+Xxl-Job+Elasticsearch+Canal+MongoDB
个人职责：
1. 负责服务管理模块开发与设计，对家政服务项目进行管理，最后在指定区域上架服务后用户可在当前区域购买。
2. 负责下单支付模块开发与设计：用户通过小程序完成下单支付，进入小程序首页查询服务，用户选择服务，下单并支付
3. 负责抢单模块开发与设计：服务人员和机构进行抢单。首先服务人员和机构设置接单范围、服务技能、开启抢单开关，然后进入抢单界面
进行抢单。
4. 负责派单调度模块开发与设计：平台根据撮合匹配算法通过任务调度将订单和服务人员进行撮合匹配，促进成交。
5. 负责订单管理模块开发与设计：对订单的生命周期进行管理，包括创建订单、取消订单、删除订单、历史订单等。
6. 负责服务人员管理模块开发与设计：对服务人员的信息、认证等进行管理。
7. 负责企业管理模块开发与设计：对机构的信息、认证进行管理。
8. 负责客户管理模块开发与设计：对 c 端用户的信息、用户的状态等信息进行管理。
9. 负责营销管理模块开发与设计：对优惠券活动进行管理。
技术要点：
1．对门户首页页面原型进行分析，在城市开通区域和首页服务列表采用 Redis 进行缓存，利用
Xxl-job 设置定时任务，提升系统响应速度和用户体验；
2．使用 Freemarker 技术将部分门户的动态数据静态化生成 html 文件，和图片、视频、CSS、JS 等资源一同通过 CDN 分发到边缘服务器；
3．门户首页区域服务搜索：使用 Elasticsearch 实现。设计了一套 Canal+MQ 的同步方案来处理 ES、Redis 等消息一致性问题；
5. 秒杀接口：实现优惠券查询，优惠券秒杀，优惠券核销业务功能，实现 lua 脚本利用 Redis 原子操作控制优惠券超卖问题，使用 Seata 分
布式事务管理创建订单和优惠券核销业务；
6. 下单接口：使用分布式事务seata解决微服务数据一致性问题


海外KYC SASS系统     后端开发工程师
项目概述： 本项目旨在开发一款面向海外加密货币交易所的KYC（Know Your Customer）SaaS系统，以提升客户识别和合规性管理的效率和准确性。该系统将为加密货币交易所提供一个全面的解决方案，以满足全球不同国家和地区的反洗钱（AML）和客户身份识别的法规要求。
涉及技术：Redis、MySQL、Rocketmq 丶 K8S、Docker等；
项目职责：负责相关核心功能的分析，设计及代 码编写，对系统进行统筹规划&设计，使开发周期快于预期系统稳定性强易于扩展维护
主要贡献：
担任小组核心开发，负责 KYC中心，商户中心，入口网关，出口网关 等模块架构的方案设计。
设计实现kyc核心流程，接入 sumsub，zoloz，onfido等不同第三方供应商，兼容差异
设计开发open api，提供给30几家加密货币交易所使用
负责实现多泳道环境，在国际化业务中降低 80% 机器成本
负责项目的上线，线上问题排查



